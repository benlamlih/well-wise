version: '3.8'

services:
  eureka:
    image: eureka-server:latest
    ports:
      - '8761:8761'
    networks:
      - spring

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'
    networks:
      - spring

  kafka:
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: 'payment-request-topic:1:1,cancellation-topic:1:1,notification-topic:1:1'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - spring

  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: toor
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    networks:
      - spring

  appointmentservice:
    image: appointmentservice:0.0.1-SNAPSHOT
    ports:
      - '8083:8083'
    environment:
      SPRING_DATA_MONGODB_HOST: mongodb
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: appointments
      SPRING_DATA_MONGODB_USERNAME: root
      SPRING_DATA_MONGODB_PASSWORD: toor
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_APPLICATION_NAME: appointmentservice
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka/
    depends_on:
      - kafka
      - mongodb
      - eureka
    networks:
      - spring

networks:
  spring:
    driver: bridge

volumes:
  mongo-data:
